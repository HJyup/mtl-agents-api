syntax = "proto3";

option go_package = "github.com/HJyup/mlt-api";

package api;

// AgentService provides functionality for creating agent conversation streams
// and sending messages within those conversations
service AgentService {
  // Creates a websocket connection for bidirectional communication with an agent
  // Both client and server can send messages through this stream
  rpc AgentWebsocketStream(stream AgentMessage) returns (stream AgentMessage);
}

// Message for bidirectional communication over the websocket
message AgentMessage {
  // Type of message being sent
  MessageType type = 1;

  // User ID for authentication and conversation tracking
  string user_id = 2;

  // Content of the message (from user to agent or agent to user)
  string content = 3;

  // Optional metadata for special operations like initialization or closing
  map<string, string> metadata = 4;
}

// Types of messages that can be sent over the websocket
enum MessageType {
  INITIALIZE = 0;  // Used to initialize a conversation
  USER_MESSAGE = 1;  // Message from user to agent
  AGENT_RESPONSE = 2;  // Response from agent to user
  ERROR = 3;  // Error messages
  CLOSE = 4;  // Signal to close the conversation
}